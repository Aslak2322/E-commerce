openapi: 3.0.3
info:
  title: E-commerce API
  description: >-
    This API manages users, products, categories, carts, and orders for an
    e-commerce platform.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development server
tags:
  - name: Users
    description: Operations related to users
  - name: Products
    description: Operations related to products
  - name: Categories
    description: Operations related to categories
  - name: Cart
    description: Operations related to the shopping cart
  - name: Orders
    description: Operations related to orders
  - name: Login
    description: Operations related to login
paths:
  /users:
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                address:
                  type: string
                registration_date:
                  type: string
                  format: date-time
                phone_number:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                profile_information:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '500':
          description: Server error
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Server error
    delete:
      tags:
        - Users
      summary: Delete all users
      responses:
        '204':
          description: All users were successfully deleted. No content is returned.
        '500':
          description: Server error. Failed to delete users.
  /login:
    post:
      tags:
        - Login
      summary: Login
      requestBody:
        description: Login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: yourpassword
      responses:
        '200':
          description: A token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JSON Web Token for authentication
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email or password
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to login
  /products:
    summary: Products
    description: Upload a product to the database
    post:
      summary: 'Upload a product '
      description: Uploads a product to the database
      operationId: Upload_product
      responses:
        '201':
          description: Succesfully uploaded a product
          content:
            application/json:
              examples:
                Uploaded product:
                  value: |-
                    {
                     "JSON": "Object"
                    }
        '500':
          description: Failed to upload a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to login
        default:
          description: Default error sample response
    get:
      tags:
        - Products
      summary: Retrieve all products
      responses:
        200:
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        500:
          description: Server error
    delete:
      tags:
        - Products
      summary: Delete all products
      responses:
        204:
          description: Products successfully deleted
        500:
          description: Server error
  /categories:
    post:
      tags:
        - Categories
      summary: Create a new category
      requestBody:
        description: Category details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Electronics
      responses:
        201:
          description: Category created
          content:
            application/json:
              schema:
                type: object
        500:
          description: Server error
    get:
      tags:
        - Categories
      summary: Retrieve all categories
      responses:
        200:
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        500:
          description: Server error
    delete:
      tags:
        - Categories
      summary: Delete all categories
      responses:
        204:
          description: Categories successfully deleted
        500:
          description: Server error

  /cart:
    post:
      tags:
        - Cart
      summary: Add item to cart
      requestBody:
        description: Cart item details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                product_id:
                  type: integer
                  example: 101
                quantity:
                  type: integer
                  example: 2
      responses:
        201:
          description: Item added to cart
          content:
            application/json:
              schema:
                type: object
        500:
          description: Server error
    get:
      tags:
        - Cart
      summary: Retrieve cart items
      responses:
        200:
          description: List of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        500:
          description: Server error
    delete:
      tags:
        - Cart
      summary: Clear the cart
      responses:
        204:
          description: Cart cleared
        500:
          description: Server error
    put:
      tags:
        - Cart
      summary: Update cart item quantity
      requestBody:
        description: Updated cart item details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                product_id:
                  type: integer
                  example: 101
                quantity:
                  type: integer
                  example: 5
      responses:
        200:
          description: Cart item updated
          content:
            application/json:
              schema:
                type: object
        404:
          description: Cart item not found
        500:
          description: Server error

  /orders:
    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        description: Order details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                total_amount:
                  type: number
                  example: 99.99
                shipping_address:
                  type: string
                  example: 123 Elm Street
                payment_method:
                  type: string
                  example: Credit Card
      responses:
        201:
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                  items:
                    type: array
                    items:
                      type: object
        500:
          description: Server error
    get:
      tags:
        - Orders
      summary: Retrieve all orders
      responses:
        200:
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        500:
          description: Server error
    delete:
      tags:
        - Orders
      summary: Delete all orders
      responses:
        204:
          description: Orders successfully deleted
        500:
          description: Server error
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        password:
          type: string
          description: Hashed password
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: string
        registration_date:
          type: string
          format: date-time
        phone_number:
          type: string
        date_of_birth:
          type: string
          format: date
        profile_information:
          type: string
